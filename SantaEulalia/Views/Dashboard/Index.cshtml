@model SantaEulalia.Controllers.ResumenVentasViewModel
@{
    ViewBag.Title = "Dashboard de Ventas";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class="mb-4">Resumen de Ventas</h2>

<div class="mb-4">
    <a href="@Url.Action("ExportarPDF", "Dashboard")" class="btn btn-danger">
        <i class="fas fa-file-pdf"></i> Exportar PDF
    </a>
</div>

<div class="row">
    <div class="col-md-4 mb-4">
        <div class="card bg-success text-white">
            <div class="card-body text-center">
                <h5>Total Ventas</h5>
                <h2>@Model.TotalVentas</h2>
            </div>
        </div>
    </div>
    <div class="col-md-4 mb-4">
        <div class="card bg-info text-white">
            <div class="card-body text-center">
                <h5>Total Ingresos</h5>
                <h2>S/ @Model.TotalIngresos.ToString("F2")</h2>
            </div>
        </div>
    </div>
</div>

<!-- Gráfico de ventas por fecha -->
<div class="card mb-4">
    <div class="card-header bg-dark text-white">
        <i class="fas fa-chart-line"></i> Ventas por Fecha
    </div>
    <div class="card-body">
        <canvas id="ventasPorFechaChart"></canvas>
    </div>
</div>

<!-- Gráfico de ventas por estado -->
<div class="card mb-4">
    <div class="card-header bg-dark text-white">
        <i class="fas fa-chart-pie"></i> Ventas por Estado
    </div>
    <div class="card-body">
        <canvas id="ventasPorEstadoChart"></canvas>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Ventas por Fecha
        const ctxFecha = document.getElementById('ventasPorFechaChart').getContext('2d');
        const ventasPorFecha = new Chart(ctxFecha, {
            type: 'line',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.VentasPorFecha.Select(v => v.Fecha.ToString("yyyy-MM-dd")))),
                datasets: [{
                    label: 'Total S/',
                    data: @Html.Raw(Json.Serialize(Model.VentasPorFecha.Select(v => v.Total))),
                    backgroundColor: 'rgba(0, 191, 255, 0.2)',
                    borderColor: 'rgba(0, 191, 255, 1)',
                    borderWidth: 2,
                    fill: true
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: { beginAtZero: true }
                }
            }
        });

        // Ventas por Estado
        const ctxEstado = document.getElementById('ventasPorEstadoChart').getContext('2d');
        const ventasPorEstado = new Chart(ctxEstado, {
            type: 'doughnut',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.VentasPorEstado.Select(v => v.Estado))),
                datasets: [{
                    label: 'Cantidad',
                    data: @Html.Raw(Json.Serialize(Model.VentasPorEstado.Select(v => v.Cantidad))),
                    backgroundColor: ['#28a745', '#ffc107', '#dc3545', '#17a2b8']
                }]
            },
            options: {
                responsive: true
            }
        });
    </script>
}
