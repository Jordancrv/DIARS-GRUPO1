@model CapaEntidad.entPedidoVenta

@{
    ViewBag.Title = "Registrar Venta";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var productos = ViewBag.Productos as List<CapaEntidad.entProductos>;
    var clientes = ViewBag.Clientes as List<CapaEntidad.entClientes>;
    var comprobantes = ViewBag.Comprobantes as List<CapaEntidad.entComprobantePago>;
    var usuarios = ViewBag.Usuarios as List<CapaEntidad.entUsuario>;
}

<h2 class="mb-4">Nueva Venta</h2>

@if (!ViewData.ModelState.IsValid && ViewData.ModelState.ErrorCount > 0)
{
    <div class="alert alert-danger">
        @foreach (var e in ViewData.ModelState.Values.SelectMany(v => v.Errors))
        {
            <div>@e.ErrorMessage</div>
        }
    </div>
}

<form asp-action="Insertar" method="post">
    <div class="mb-3">
        <label asp-for="IdCliente" class="form-label">Cliente</label>
        <select asp-for="IdCliente" class="form-select" required>
            <option value="">-- Seleccionar Cliente --</option>
            @foreach (var c in clientes)
            {
                <option value="@c.id_cliente">@c.nombres</option>
            }
        </select>
    </div>

    <div class="mb-3">
        <label asp-for="IdUsuario" class="form-label">Usuario</label>
        <select asp-for="IdUsuario" class="form-select" required>
            <option value="">-- Seleccionar Usuario --</option>
            @foreach (var u in usuarios)
            {
                <option value="@u.id_usuario">@u.id_usuario</option>
            }
        </select>
    </div>

    <div class="mb-3">
        <label asp-for="IdComprobante" class="form-label">Comprobante</label>
        <select asp-for="IdComprobante" class="form-select" required>
            <option value="">-- Seleccionar Comprobante --</option>
            @foreach (var cp in comprobantes)
            {
                <option value="@cp.id_comprobante">@cp.tipo</option>
            }
        </select>
    </div>

    <div class="mb-3">
        <label asp-for="Fecha" class="form-label">Fecha de Venta</label>
        <input asp-for="Fecha" class="form-control" type="date" readonly value="@DateTime.Now.ToString("yyyy-MM-dd")" /> <!-- Aquí se establece la fecha actual como valor predeterminado y solo lectura -->
    </div>

    <input type="hidden" asp-for="IdUsuario" value="@ViewBag.IdUsuario" />

    <h5>Detalles de Productos</h5>
    <table class="table table-bordered table-dark" id="detalleTable">
        <thead>
            <tr>
                <th>Producto</th>
                <th>Cantidad</th>
                <th>Precio Unitario</th>
                <th>% Descuento</th>
                <th>Subtotal</th>
                <th>Total c/ Desc.</th>
                <th></th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
    <button type="button" class="btn btn-success mb-3" onclick="agregarDetalle()">+ Agregar Producto</button>

    <div class="mb-3">
        <label class="form-label">Total:</label>
        <span id="totalVenta" class="fw-bold">0.00</span>
    </div>

    <input type="hidden" name="Total" id="inputTotalVenta" value="0.00" />
    <input type="hidden" name="TotalDescuentoProductos" id="inputDescuentoProductos" value="0.00" />
    <input type="hidden" name="TotalDescuentoPromociones" id="inputTotalDescuentoPromociones" value="0.00" />
    <input type="hidden" name="TotalConDescuento" id="inputTotalConDescuento" value="0.00" />

    <div class="mb-3">
        <label asp-for="Total" class="form-label">Total</label>
        <input asp-for="Total" class="form-control" readonly />
    </div>
    <div class="mb-3">
        <label asp-for="TotalDescuentoProductos" class="form-label">Total Descuento Productos</label>
        <input asp-for="TotalDescuentoProductos" class="form-control" readonly />
    </div>
    <div class="mb-3">
        <label asp-for="TotalDescuentoPromociones" class="form-label">Total Descuento Promociones</label>
        <input asp-for="TotalDescuentoPromociones" class="form-control" readonly />
    </div>
    <div class="mb-3">
        <label asp-for="TotalConDescuento" class="form-label">Total con Descuento</label>
        <input asp-for="TotalConDescuento" class="form-control" readonly />
    </div>
    <div class="mb-3">
        <label asp-for="Estado" class="form-label">Estado</label>
        <select asp-for="Estado" class="form-select" required>
            <option value="pendiente">pendiente</option>
            <option value="procesado">procesado</option>
            <option value="anulado">anulado</option>
        </select>
    </div>

    <button type="submit" class="btn btn-primary">Registrar Venta</button>
    <a asp-action="Listar" class="btn btn-secondary">Cancelar</a>
</form>

@section Scripts {
    <script>
        const productos = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(productos));

        function agregarDetalle() {
            const table = document.querySelector("#detalleTable tbody");
            const index = table.rows.length;
            const row = document.createElement("tr");

            row.innerHTML = `
                <td>
                    <select name="Detalles[${index}].IdProducto" class="form-select productoSelect" onchange="actualizarPrecio(this)" required>
                        <option value="">-- Seleccionar --</option>
                        ${productos.map(p => `
                            <option
                                value="${p.id_producto}"
                                data-precioventa="${p.precioventa}"
                                data-preciocompra="${p.precio}">
                                ${p.nombre}
                            </option>
                        `).join("")}
                    </select>
                </td>
                <td>
                    <input type="number" name="Detalles[${index}].Cantidad"
                           class="form-control cantidad" min="1" value="1"
                           onchange="actualizarSubtotal(this)" required />
                </td>
                <td>
                    <input type="number" name="Detalles[${index}].PrecioUnitario"
                           class="form-control precio" readonly />
                </td>
                <td>
                    <input type="number" name="Detalles[${index}].Descuento"
                           class="form-control descuento" min="0" max="100" value="0"
                           onchange="actualizarSubtotal(this)" />
                </td>
                <td class="subtotal">0.00</td>
                <td>
                    <input type="hidden" name="Detalles[${index}].TotalConDescuento"
                           class="inputTotalConDescuento" value="0.00" />
                </td>
                <td>
                    <button type="button" class="btn btn-danger btn-sm"
                            onclick="eliminarFila(this)">X</button>
                </td>
            `;
            table.appendChild(row);
        }

        function actualizarPrecio(el) {
            const row = el.closest("tr");
            const opt = el.options[el.selectedIndex];
            const pv = parseFloat(opt.getAttribute("data-precioventa"))  || 0;
            const pc = parseFloat(opt.getAttribute("data-preciocompra")) || 0;

            if (pv < pc) {
                alert(`Precio venta (S/. ${pv.toFixed(2)}) < precio compra (S/. ${pc.toFixed(2)}).`);
                el.selectedIndex = 0;
                row.querySelector(".precio").value = "";
                row.querySelector(".subtotal").innerText = "0.00";
                row.querySelector(".inputTotalConDescuento").value = "0.00";
                actualizarTotal();
                return;
            }

            row.querySelector(".precio").value = pv.toFixed(2);
            actualizarSubtotal(el);
        }

        function actualizarSubtotal(el) {
            const row = el.closest("tr");
            const qty  = parseFloat(row.querySelector(".cantidad").value)   || 0;
            const price= parseFloat(row.querySelector(".precio").value)     || 0;
            const disc = parseFloat(row.querySelector(".descuento").value)  || 0;

            const subtotal    = qty * price;
            const totalDesc   = subtotal * (disc / 100);
            const totalConDesc= subtotal - totalDesc;

            row.querySelector(".subtotal").innerText = subtotal.toFixed(2);
            row.querySelector(".inputTotalConDescuento").value = totalConDesc.toFixed(2);
            actualizarTotal();
        }

        function actualizarTotal() {
            let sum = 0;
            document.querySelectorAll(".subtotal").forEach(td => {
                sum += parseFloat(td.innerText) || 0;
            });
            document.getElementById("totalVenta").innerText = sum.toFixed(2);
            document.getElementById("inputTotalVenta").value = sum.toFixed(2);
            document.getElementById("inputDescuentoProductos").value = sum.toFixed(2);
            document.getElementById("inputTotalConDescuento").value = sum.toFixed(2);
        }

        function eliminarFila(btn) {
            btn.closest("tr").remove();
            actualizarTotal();
        }
    </script>
}
